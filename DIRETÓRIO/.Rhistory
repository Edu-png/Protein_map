#[1] "C:/Users/Eduardo/Desktop/estagio/estagio"
#Agora vou mudar o diretório para o do pen drive
#setwd("/Volumes/ESTÁGIO/DIRETÓRIO/")
setwd("F:\\DIRETÓRIO")
#agora basta seguir os passos até então para a enzima que escolhi:
arquivo_pdb = readLines("1mbd.pdb1")
#selecionando as linhas com informacoes com com posicao XYZ dos atomos na proteínas
linhas_com_ATOM = grep(pattern = "ATOM", x = arquivo_pdb)
#selecionando as informacoes com com posicao XYZ dos atomos na proteínas
linhas_com_XYZ = arquivo_pdb[linhas_com_ATOM]
#verificar as 10 primeiras linhas
linhas_com_XYZ[1:10]
POS_XYZ =  data.frame(X = numeric(),
Y =  numeric(),
Z = numeric(),
A = character(),
stringsAsFactors = F)
POS_XYZ
for(conta_linhas in 1:length(linhas_com_XYZ)){
POS_XYZ[conta_linhas,] = unlist(strsplit(x = linhas_com_XYZ[conta_linhas], split = "\\s+"))[c(7:9,12)]
}
dim(POS_XYZ)
POS_XYZ[1:20,]
library(rgl)
library(plotly)
tamanho = POS_XYZ$A
tamanho = gsub(pattern = "O", replacement = 2, x = tamanho) #raio de 60 pm
tamanho = gsub(pattern = "C", replacement = 2.5, x = tamanho) #raio de 70 pm
tamanho = gsub(pattern = "N", replacement = 2.25, x = tamanho) #raio de 65 pm
tamanho = gsub(pattern = "S", replacement = 4, x = tamanho)#raio de 100 pm
tamanho = as.numeric(tamanho) #Converter para numérico para que possa ser reconhecido pelo comando size.
with(POS_XYZ, plot3d(X,Y,Z, type = 's', size = tamanho))#type = 's', 'h', 'l' e 'p'
color_range = colorRampPalette(c("#480172", "red"))
my_colors = color_range(1000)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(X)]))
?rank
library(squash);
install.packages("squash")
install.packages("squash")
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(X,Y,Z)]))
?rank
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(POS_XYZ)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(Y)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(Y)] [1+(df$z > 0)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(Y)] [1+(POS_XYZ > 0)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(Y)] [1+(POS_XYZ$X > 0)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(Y)] [1+(POS_XYZ > 1)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(Y)] [2+(POS_XYZ > 0)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(Y)], [2+(POS_XYZ > 0)]))
?rank
?rank
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(Y)], [2+(POS_XYZ > 0)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(Y)], [2+(POS_XYZ > 0)])))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(Y) [2+(POS_XYZ > 0)]))
?rank
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(Y)] [2+(POS_XYZ > 0)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(0)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(Y)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(0,0)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(0,0,0)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(100)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(20)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = as.numeric(POS_XYZ)))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = as.numeric(POS_XYZ)))
(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = as.numeric(POS_XYZ$X)))
(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = as.numeric(POS_XYZ$X)))
(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = as.numeric(POS_XYZ$X)))
(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = as.numeric(POS_XYZ$X)))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = as.numeric(POS_XYZ$X)))
color_range = colorRampPalette(c("#480172", "red"))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = as.numeric(POS_XYZ$Z)))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = rainbow(849)))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = rainbow(3)))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = rainbow(2)))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = rainbow(2)))
palette <- colorRampPalette(c("blue", "green", "yellow", "red"))
col.table <- palette(256)
col.ind <- cut(POS_XYZ, 256)
col.ind <- cut(POS_XYZ$X, 256)
col.table <- palette(256)
col.ind <- cut(POS_XYZ$X, 256)
col.ind <- cut(POS_XYZ, 256)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank()]), main ="bty= 'b2'")
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(X)]), main ="bty= 'b2'")
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(X)]),bty= 'b2')
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(X)]), bty= 'b2')
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X)]))
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X)]))
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X)]))
library(scatter3D)
tamanho = POS_XYZ$A
install.packages('scatter3D')
library(scatter3D)
install.packages('scatter3D')
library(scatter3D)
install.packages("plot3D")
library(plot3D)
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X)]))
tamanho = POS_XYZ$A
tamanho = gsub(pattern = "O", replacement = 2, x = tamanho) #raio de 60 pm
tamanho = gsub(pattern = "C", replacement = 2.5, x = tamanho) #raio de 70 pm
tamanho = gsub(pattern = "N", replacement = 2.25, x = tamanho) #raio de 65 pm
tamanho = gsub(pattern = "S", replacement = 4, x = tamanho)#raio de 100 pm
tamanho = as.numeric(tamanho) #Converter para numérico para que possa ser reconhecido pelo comando size.
with(POS_XYZ, plot3d(X,Y,Z, type = 's', size = tamanho))#type = 's', 'h', 'l' e 'p'
color_range = colorRampPalette(c("#480172", "red"))
my_colors = color_range(1000)
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = rainbow(2)))
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X)]))
scatter3D(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = rainbow(2)))
scatter3D (X,Y,Z, type = "s", size = tamanho, col = rainbow(2)))
?rank
scatter3D (X,Y,Z, type = "s", size = tamanho, col = rainbow(2))
?rank
scatter3D(POS_XYZ(X,Y,Z, type = "s", size = tamanho, col = rainbow(2)))
scatter3D(POS_XYZ(X,Y,Z, type = "s", size = tamanho, col = rainbow(2)))
scatter3D(POS_XYZ(X,Y,Z, type = "s", size = tamanho, col = rainbow(2)))
scatter3D(POS_XYZ(X,Y,Z, type = "s", size = tamanho, col = rainbow(2)))
scatter3D(POS_XYZ(X,Y,Z, type = "s", size = tamanho, col = rainbow(2)))
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X)], shade = TRUE))
lattice::wireframe(with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X)], shade = TRUE)))
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = POS_XYZ$A, size = tamanho, col = my_colors[rank(X)], shade = TRUE))
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X)], shade = TRUE))
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X)], shade = TRUE))
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X)]))
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X,Y,Z)]))
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(X,Y)]))
with(POS_XYZ, plot3d(X,Y,Z, bty = "b2", type = "s", size = tamanho, col = my_colors[rank(0, -150)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(0, -150)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(0, -10000)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(S)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(A)]))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = my_colors[rank(midle)]))
myColorRamp <- function(colors, values) {
v <- (values - min(values))/diff(range(values))
x <- colorRamp(colors)(v)
rgb(x[,1], x[,2], x[,3], maxColorValue = 255)
}
x <- sin((1:100)/10)
y <- cos((1:100)/10)
z <- seq(-20, 20, length.out=100)
cols <- myColorRamp(c("red", "blue"), z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
z <- seq(0, 20, length.out=100)
cols <- myColorRamp(c("red", "blue"), z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
z <- seq(0, 20, length.out=10)
cols <- myColorRamp(c("red", "blue"), z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
z <- seq(0, 20, length.out=10000)
cols <- myColorRamp(c("red", "blue"), z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
z <- seq(0, 20, length.out=1000)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
z <- seq(0, 20, length.out=100)
cols <- myColorRamp(c("red", "blue"), z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
myColorRamp <- function(colors, values) {
v <- (values - min(values))/diff(range(values))
x <- colorRamp(colors)(v)
rgb(x[,1], x[,2], x[,3], maxColorValue = 100)
}
x <- sin((1:100)/10)
y <- cos((1:100)/10)
z <- seq(0, 20, length.out=100)
cols <- myColorRamp(c("red", "blue"), z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
x <- colorRamp(colors)(v)
rgb(x[,1], x[,2], x[,3], maxColorValue = 255)
myColorRamp <- function(colors, values) {
v <- (values - min(values))/diff(range(values))
x <- colorRamp(colors)(v)
rgb(x[,1], x[,2], x[,3], maxColorValue = 255)
}
x <- sin((1:100)/100)
y <- cos((1:100)/100)
z <- seq(-30, 20, length.out=100)
cols <- myColorRamp(c("red", "blue"), z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
cols <- myColorRamp(c("red", "#480172"), z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
cols <- myColorRamp(c("yellow", "#480172"), z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
cols <- myColorRamp(c("yellow", "#480172", "blue", "green"), z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
cols <- colorRampPalette(c("#480172", "red"), z)
cols <- myColorRamp(c("#480172", "red", z))
cols <- myColorRamp(c("#480172", "red") , z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
rgb(x[,0], x[,0], x[,0], maxColorValue = 255)
myColorRamp <- function(colors, values) {
v <- (values - min(values))/diff(range(values))
x <- colorRamp(colors)(v)
rgb(x[,0], x[,0], x[,0], maxColorValue = 255)
}
x <- sin((1:100)/100)
y <- cos((1:100)/100)
z <- seq(-30, 20, length.out=100)
cols <- myColorRamp(c("#480172", "red") , z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
rgb(x[,5], x[,5], x[,5], maxColorValue = 255)
myColorRamp <- function(colors, values) {
v <- (values - min(values))/diff(range(values))
x <- colorRamp(colors)(v)
rgb(x[,5], x[,5], x[,5], maxColorValue = 255)
}
x <- sin((1:100)/100)
y <- cos((1:100)/100)
z <- seq(-30, 20, length.out=100)
cols <- myColorRamp(c("#480172", "red") , z)
rgb(x[,1], x[,1], x[,1], maxColorValue = 255)
myColorRamp <- function(colors, values) {
v <- (values - min(values))/diff(range(values))
x <- colorRamp(colors)(v)
rgb(x[,1], x[,1], x[,1], maxColorValue = 255)
}
x <- sin((1:100)/100)
y <- cos((1:100)/100)
z <- seq(-30, 20, length.out=100)
cols <- myColorRamp(c("#480172", "red") , z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
rgb(x[,2], x[,2], x[,1], maxColorValue = 255)
myColorRamp <- function(colors, values) {
v <- (values - min(values))/diff(range(values))
x <- colorRamp(colors)(v)
rgb(x[,2], x[,2], x[,1], maxColorValue = 255)
}
x <- sin((1:100)/100)
y <- cos((1:100)/100)
z <- seq(-30, 20, length.out=100)
cols <- myColorRamp(c("#480172", "red") , z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
rgb(x[,2], x[,2], x[,2], maxColorValue = 255)
myColorRamp <- function(colors, values) {
v <- (values - min(values))/diff(range(values))
x <- colorRamp(colors)(v)
rgb(x[,2], x[,2], x[,2], maxColorValue = 255)
}
x <- sin((1:100)/100)
y <- cos((1:100)/100)
z <- seq(-30, 20, length.out=100)
cols <- myColorRamp(c("#480172", "red") , z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
rgb(x[,0], x[,1], x[,2], maxColorValue = 255)
myColorRamp <- function(colors, values) {
v <- (values - min(values))/diff(range(values))
x <- colorRamp(colors)(v)
rgb(x[,0], x[,1], x[,2], maxColorValue = 255)
}
x <- sin((1:100)/100)
y <- cos((1:100)/100)
z <- seq(-30, 20, length.out=100)
cols <- myColorRamp(c("#480172", "red") , z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
rgb(x[,1], x[,2], x[,3], maxColorValue = 255)
myColorRamp <- function(colors, values) {
v <- (values - min(values))/diff(range(values))
x <- colorRamp(colors)(v)
rgb(x[,1], x[,2], x[,3], maxColorValue = 255)
}
x <- sin((1:100)/100)
y <- cos((1:100)/100)
z <- seq(-30, 20, length.out=100)
cols <- myColorRamp(c("#480172", "red") , z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
x <- sin((1:100)/100)
y <- cos((1:100)/100)
z <- seq(-30, 20, length.out=100)
cols <- myColorRamp(c("#480172", "red") , z)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
cols <- myColorRamp(c("#480172", "red") , z, y, x)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
cols <- myColorRamp(c("#480172", "red") , y)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
myColorRamp <- function(colors, POS_XYZ) {
v <- (values - min(POS_XYZ))/diff(range(POS_XYZ))
x <- colorRamp(colors)(v)
rgb(x[,1], x[,2], x[,3], maxColorValue = 255)
}
x <- sin((1:100)/100)
y <- cos((1:100)/100)
myColorRamp <- function(colors, POS_XYZ) {
v <- (values - min(values))/diff(range(POS_XYZ))
x <- colorRamp(colors)(v)
rgb(x[,1], x[,2], x[,3], maxColorValue = 255)
}
x <- sin((1:100)/100)
y <- cos((1:100)/100)
z <- seq(-30, 20, length.out=100)
cols <- myColorRamp(c("#480172", "red") , y)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
x <- sin((15:100)/100)
y <- cos((0:100)/100)
z <- seq(20, length.out=100)
cols <- myColorRamp(c("#480172", "red") , y)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
x <- sin((1:15)/100)
y <- cos((1:20)/100)
z <- seq(-30, 0, length.out=100)
cols <- myColorRamp(c("#480172", "red") , x)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
myColorRamp <- function(colors, POS_XYZ) {
v <- (POS_XYZ - min(POS_XYZ))/diff(range(POS_XYZ))
x <- colorRamp(colors)(v)
rgb(x[,1], x[,2], x[,3], maxColorValue = 255)
}
x <- sin((1:15)/100)
y <- cos((1:20)/100)
z <- seq(-30, 0, length.out=100)
cols <- myColorRamp(c("#480172", "red") , x)
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
with(POS_XYZ, plot3d(X,Y,Z, type = "s", size = tamanho, col = cols))
